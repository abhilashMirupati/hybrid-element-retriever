UPDATED HER EXECUTION FLOW DIAGRAM - EXPLICIT NO-SEMANTIC MODE
================================================================

CLI Entry Point (cli.py)
    │
    ├─ Parse --no-semantic flag
    │   ├─ Default: use_semantic = True
    │   └─ --no-semantic: use_semantic = False
    │
    └─ HybridClient.set_semantic_mode() (cli_api.py)
        │
        └─ Pipeline.query() (pipeline.py)
            │
            ├─ config_service.should_use_semantic_search()
            │
            ├─ SEMANTIC MODE ──────────────────────────────────────────────┐
            │   │                                                         │
            │   ├─ _query_semantic_mode()                                 │
            │   │   │                                                     │
            │   │   ├─ Element Preparation                                │
            │   │   │   └─ _prepare_elements_for_query()                 │
            │   │   │                                                     │
            │   │   ├─ MiniLM Shortlist (384-d)                          │
            │   │   │   ├─ embed_query()                                  │
            │   │   │   ├─ mini_store.search() (FAISS)                   │
            │   │   │   └─ Interactive element filtering                  │
            │   │   │                                                     │
            │   │   ├─ MarkupLM Rerank (768-d)                           │
            │   │   │   ├─ _embed_query_markup()                         │
            │   │   │   ├─ element_embedder.batch_encode()               │
            │   │   │   └─ Cosine similarity calculation                  │
            │   │   │                                                     │
            │   │   ├─ Heuristics Application                            │
            │   │   │   └─ _apply_basic_heuristics()                     │
            │   │   │                                                     │
            │   │   ├─ Promotion Check                                   │
            │   │   │   └─ lookup_promotion()                            │
            │   │   │                                                     │
            │   │   ├─ XPath Generation                                  │
            │   │   │   └─ generate_xpath_for_element()                  │
            │   │   │                                                     │
            │   │   └─ Executor (Playwright)                             │
            │   │                                                         │
            │   └─ _query_standard() or _query_two_stage()               │
            │                                                             │
            └─ NO-SEMANTIC MODE (EXPLICIT) ────────────────────────────────┐
                │                                                         │
                ├─ _query_no_semantic_mode() (EXPLICIT)                   │
                │   │                                                     │
                │   ├─ STEP 1: Parse test step → extract intent, target_text, value │
                │   │   └─ IntentParser.parse_step()                     │
                │   │       ├─ Extract quoted target text                 │
                │   │       ├─ Detect intent (click, enter, search, etc.) │
                │   │       ├─ Extract value (for enter/type operations)  │
                │   │       └─ Calculate confidence score                 │
                │   │                                                     │
                │   ├─ STEP 2: Retrieve all DOM nodes whose innerText or  │
                │   │   accessibility attributes == target_text           │
                │   │   └─ DOMTargetBinder.bind_target_to_dom()          │
                │   │       ├─ Match innerText, aria-label, title, etc.   │
                │   │       ├─ Exact and partial matching                 │
                │   │       ├─ Visibility and interactivity checks        │
                │   │       └─ Generate backend node IDs                  │
                │   │                                                     │
                │   ├─ STEP 3: Resolve matches via backendNodeId          │
                │   │   └─ _resolve_matches_by_backend_node_id()          │
                │   │       ├─ Group by backend node ID                   │
                │   │       ├─ Keep best match per node                    │
                │   │       └─ Remove duplicates                          │
                │   │                                                     │
                │   ├─ STEP 4: Fallback to AX tree only if DOM has no matches │
                │   │   └─ _try_accessibility_fallback_explicit()         │
                │   │       ├─ Extract accessibility elements             │
                │   │       ├─ Match by aria-label, title, role           │
                │   │       └─ Convert to DOMMatch format                 │
                │   │                                                     │
                │   ├─ STEP 5: For each match, build canonical descriptor │
                │   │   └─ _build_canonical_descriptors()                 │
                │   │       ├─ Tag + attributes + hierarchy               │
                │   │       ├─ Hierarchy path building                    │
                │   │       └─ Canonical descriptor creation              │
                │   │                                                     │
                │   ├─ STEP 6: If multiple candidates, rerank with MarkupLM │
                │   │   └─ _rerank_no_semantic_matches_explicit()         │
                │   │       ├─ MarkupLM embedding (if available)          │
                │   │       ├─ Intent-specific scoring                    │
                │   │       ├─ Score combination (weighted average)       │
                │   │       └─ Final ranking                              │
                │   │                                                     │
                │   ├─ STEP 7: Apply intent-specific heuristics           │
                │   │   └─ _apply_intent_specific_heuristics()           │
                │   │       ├─ Click: prefer button-like elements         │
                │   │       ├─ Enter: prefer text input elements          │
                │   │       ├─ Search: prefer search input elements       │
                │   │       ├─ Select: prefer select/option elements      │
                │   │       ├─ Validate: prefer label elements            │
                │   │       └─ Tag/attribute preferences and avoidance    │
                │   │                                                     │
                │   ├─ STEP 8: Generate stable relative XPath and execute │
                │   │   ├─ Promotion Check (mode-specific key)            │
                │   │   │   └─ lookup_promotion() with "no-semantic:" key │
                │   │   ├─ XPath Generation                               │
                │   │   │   └─ generate_xpath_for_element()               │
                │   │   └─ Executor (Playwright)                         │
                │   │                                                     │
                │   └─ Enhanced Components                                │
                │       ├─ IntentParser (intent extraction)               │
                │       ├─ DOMTargetBinder (deterministic matching)       │
                │       ├─ FrameHandler (iframe support)                  │
                │       ├─ ShadowDOMHandler (shadow DOM support)          │
                │       └─ DynamicHandler (dynamic content support)       │
                │                                                         │
SHARED COMPONENTS ────────────────────────────────────────────────────────┘
    │
    ├─ Heuristics Application (_apply_basic_heuristics)
    ├─ XPath Generation (generate_xpath_for_element)
    ├─ Executor (Playwright)
    └─ Performance Metrics (get_metrics, record_query_timing)

KEY DIFFERENCES - EXPLICIT NO-SEMANTIC MODE:
============================================

SEMANTIC MODE:
- Uses MiniLM (384-d) + MarkupLM (768-d) embeddings
- FAISS vector search for shortlisting
- Always applies MarkupLM reranking
- Standard promotion cache key
- Basic frame handling
- Generic heuristics

EXPLICIT NO-SEMANTIC MODE:
- Uses explicit intent parsing (IntentParser)
- Deterministic DOM-to-target binding (DOMTargetBinder)
- Backend node ID resolution for deduplication
- Intent-specific heuristics (click, enter, search, select, validate)
- Mode-specific promotion cache key ("no-semantic:")
- Enhanced frame, shadow DOM, and dynamic content handling
- Accessibility fallback only when DOM has no matches
- Canonical descriptor building (tag + attributes + hierarchy)

DETERMINISTIC DOM-TO-TARGET BINDING:
===================================

1. Parse test step → extract intent, target_text, value
2. Match innerText and accessibility attributes to target_text
3. Resolve matches via backendNodeId (remove duplicates)
4. Fallback to AX tree only if DOM has no matches
5. Build canonical descriptor for each match
6. Apply intent-specific heuristics
7. Generate stable relative XPath

INTENT-SPECIFIC HEURISTICS:
===========================

CLICK:
- Prefer: button, a, input[type="button"], input[type="submit"]
- Avoid: div, span, p
- Min interactive score: 0.7

ENTER/TYPE/SEARCH:
- Prefer: input[type="text"], input[type="email"], textarea
- Avoid: button, a, div
- Min interactive score: 0.8

SELECT:
- Prefer: select, option, input[type="radio"], input[type="checkbox"]
- Avoid: div, span
- Min interactive score: 0.7

VALIDATE:
- Prefer: label, span, div, p
- Avoid: input, button
- Min interactive score: 0.5

CONFIGURATION MANAGEMENT:
========================

All configuration now loaded from .env file:
- HER_USE_SEMANTIC_SEARCH=true/false
- HER_USE_HIERARCHY=true (default ON)
- HER_NO_SEMANTIC_CASE_SENSITIVE=false
- HER_NO_SEMANTIC_MIN_SCORE=0.5
- HER_NO_SEMANTIC_USE_AX_FALLBACK=true
- HER_MODELS_DIR=src/her/models
- HER_CACHE_DIR=.her_cache
- And many more...

BRANCHING ISOLATION:
===================

✅ Semantic path: Completely untouched, uses existing methods
✅ No-semantic path: Completely isolated, uses new explicit methods
✅ Single branching point: config_service.should_use_semantic_search()
✅ Zero regression risk: No changes to existing API
✅ Enhanced capabilities: Intent parsing, deterministic binding, AX fallback