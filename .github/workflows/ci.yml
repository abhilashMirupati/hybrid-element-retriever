name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      
      - name: Install Playwright browsers
        run: |
          python -m pip install playwright
          python -m playwright install chromium
      
      - name: Run Black formatter check
        run: |
          black --check src tests
        continue-on-error: true
      
      - name: Run Flake8 linter
        run: |
          flake8 src tests --max-line-length=88 --extend-ignore=E203,W503
        continue-on-error: true
      
      - name: Run MyPy type checker
        run: |
          mypy src --ignore-missing-imports
        continue-on-error: true
      
      - name: Run tests with coverage
        run: |
          pytest tests/ \
            --cov=src/her \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-report=xml \
            --cov-fail-under=80 \
            -v
      
      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
      
      - name: Archive coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/
  
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
      
      - name: Build wheel and sdist
        run: |
          python -m build
      
      - name: Check dist
        run: |
          ls -la dist/
          pip install check-wheel-contents
          check-wheel-contents dist/*.whl
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
  
  build-java:
    name: Build Java wrapper
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build with Maven
        run: |
          cd java
          mvn clean package
      
      - name: Run Java smoke test
        run: |
          cd java
          mvn test
        continue-on-error: true
      
      - name: Upload Java artifacts
        uses: actions/upload-artifact@v3
        with:
          name: java-jar
          path: java/target/*.jar